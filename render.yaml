services:
  - type: web
    name: smartsafe-ppe-detection
    env: python
    region: oregon
    plan: free
    buildCommand: |
      # Create required directories
      mkdir -p /opt/render/project/src/ssl
      chmod 755 /opt/render/project/src/ssl
      mkdir -p /tmp/Ultralytics
      chmod 777 /tmp/Ultralytics
      
      # Install dependencies
      pip install --upgrade pip
      pip install -r requirements.txt
      
      # Download models
      python download_models.py
      
      # Copy SSL certificates if they exist
      if [ -f ssl/supabase.crt ]; then
        cp ssl/supabase.crt /opt/render/project/src/ssl/
        chmod 600 /opt/render/project/src/ssl/supabase.crt
      fi
      if [ -f ssl/root.crt ]; then
        cp ssl/root.crt /opt/render/project/src/ssl/
        chmod 600 /opt/render/project/src/ssl/root.crt
      fi
    startCommand: |
      export RENDER=1 && \
      gunicorn -c gunicorn.conf.py smartsafe_saas_api:app
    healthCheckPath: /health
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: smartsafe_saas_api.py
      - key: PORT  # This will be set by Render
        value: "10000"
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: CUDA_VISIBLE_DEVICES
        value: ""
      - key: YOLO_CONFIG_DIR
        value: /tmp/Ultralytics
      - key: DATABASE_URL
        fromDatabase:
          name: smartsafe-db
          property: connectionString
      - key: SUPABASE_URL
        value: "db.nbxntohihcwruwlnthfb.supabase.co"
      - key: SUPABASE_PORT
        value: "5432"
      - key: SUPABASE_DB_NAME
        value: "postgres"
      - key: SUPABASE_USER
        value: "postgres"
      - key: SUPABASE_PASSWORD
        sync: false
      - key: SSL_CERT_PATH
        value: "/opt/render/project/src/ssl/supabase.crt"
      - key: SSL_MODE
        value: "require"
      - key: REDIS_URL
        fromService:
          name: smartsafe-redis
          type: redis
          property: connectionString
      - key: GUNICORN_CMD_ARGS  # Add explicit Gunicorn arguments
        value: "--access-logfile - --error-logfile - --capture-output"
    disks:
      - name: smartsafe-data
        mountPath: /opt/render/project/src/data
        sizeGB: 1
      - name: smartsafe-ssl
        mountPath: /opt/render/project/src/ssl
        sizeGB: 1
    healthCheck:
      path: /health
      interval: 30s
      timeout: 10s
      gracePeriod: 30s
      startPeriod: 40s
    autoDeploy: true
    domains:
      - smartsafe-api.onrender.com
    
  - type: redis
    name: smartsafe-redis
    plan: free
    region: oregon
    ipAllowList: []
    
databases:
  - name: smartsafe-db
    databaseName: smartsafe_ppe
    user: smartsafe_user
    region: oregon
    plan: starter
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere 